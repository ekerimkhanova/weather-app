{"version":3,"sources":["components/Cards/ui/CardUI.js","styles/responsive.js","components/Cards/ui/CardsUI.js","styles/useCardsStyles.js","constans/constans.js","components/Cards/functional/CardsContainer.js","components/Search/ui/SearchUI.js","api/api.js","styles/useSearchStyles.js","functions/functions.js","components/Search/functional/SearchContainer.js","App.js","index.js"],"names":["CardUI","temp","date","icon","pres","humidity","clouds","wind","classes","isLoading","Card","className","card","CardContent","contentCard","Typography","title","color","gutterBottom","src","alt","variant","component","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","CardsUI","city","cards","swipeable","draggable","showDots","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","useCardsStyles","makeStyles","fontSize","padding","textAlign","borderRadius","months","CardsContainer","data","useMemo","map","el","datetime","description","weather","rh","wind_spd","SearchUI","searchInput","handleChange","handleSubmit","showError","fullScreen","onSubmit","Paper","root","InputBase","input","inputProps","value","onChange","placeholder","IconButton","iconButton","aria-label","type","API","axios","create","baseURL","headers","params","lang","key","useSearchStyles","theme","breakpoints","down","width","marginLeft","spacing","flex","formateDate","month","arr","split","num","String","formateNum","Math","ceil","SearchContainer","setData","setCity","setIsLoading","useState","setSearchInput","setShowError","setFullScreen","query","setQuery","useEffect","didCancel","a","get","result","status","city_name","toFixed","replace","console","error","fetchData","e","target","preventDefault","App","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88d6daa3.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst CardUI = ({ temp, date, icon, pres, humidity, clouds, wind, classes, isLoading }) => {\n\n    if(isLoading === true){\n        return <p>Loading...</p>;\n    }\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.contentCard}>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    {date}\n                </Typography>\n                <img src={icon} alt='' />\n                <Typography variant=\"h5\" component=\"h2\">\n                    {temp}&deg;\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Давление: {pres} мм.рт.ст.\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Влажность: {humidity}%\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Облачность: {clouds}%\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Ветер: {wind} м/с\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default CardUI\n","export const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 5,\n      slidesToSlide: 5 \n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 3,\n      slidesToSlide: 2 \n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1 \n    }\n  };","import React from 'react';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { responsive } from '../../../styles/responsive';\n\nconst CardsUI = ({ city, cards }) => {\n\n  return (\n    <>\n      <div className='cards-city'>{city}</div>\n      <Carousel\n        swipeable={true}\n        draggable={true}\n        showDots={false}\n        responsive={responsive}\n        ssr={true}\n        infinite={false}\n        autoPlaySpeed={1000}\n        keyBoardControl={true}\n        customTransition=\"all .5\"\n        transitionDuration={500}\n        containerClass=\"carousel-container\"\n        removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n      > \n        {cards}\n      </Carousel>\n    </>\n  )\n}\n\nexport default CardsUI\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useCardsStyles = makeStyles(() => ({\n    title: {\n        fontSize: 14\n    },\n\n    contentCard: {\n        \"&:last-child\": {\n            padding: 16\n        },\n        textAlign: \"center\",\n    },\n    card: {\n        borderRadius: 0,\n    }\n}));\n","export const months = {\n    '01': 'января',\n    '02': 'февраля',\n    '03': 'марта',\n    '04':'апреля',\n    '05': 'мая',\n    '06': 'июня',\n    '07': 'июля',\n    '08': 'августа',\n    '09': 'сентября',\n    '10': 'октября',\n    '11': 'ноября',\n    '12': 'декабря',\n}\n\nexport const PRESSURE_CONST = 1.333\n\nexport const GET_WEATHER_ICONS_LINK = 'https://www.weatherbit.io/static/img/icons/'","import React, { useMemo } from 'react';\nimport CardUI from '../ui/CardUI';\nimport CardsUI from \"../ui/CardsUI\";\nimport './Cards.css';\nimport { useCardsStyles } from '../../../styles/useCardsStyles';\nimport { GET_WEATHER_ICONS_LINK } from '../../../constans/constans';\n\nconst CardsContainer = ({ data, city, isLoading}) => {\n\n    const classes = useCardsStyles();\n\n    const cards = useMemo(()=>{\n        return data.map( el => <CardUI\n            key={el.datetime}\n            temp={el.temp}\n            date={el.datetime}\n            description={el.weather.description}\n            icon={GET_WEATHER_ICONS_LINK + `${el.weather.icon}.png`}\n            pres={el.pres}\n            humidity={el.rh}\n            clouds={el.clouds}\n            wind={el.wind_spd}\n            classes={classes} />)\n    }, [data, classes]) \n\n    return <CardsUI city={city} cards={cards} isLoading={isLoading} />\n}\n\nexport default CardsContainer;\n","import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst SearchUI = ({ searchInput, handleChange, handleSubmit, showError, classes, fullScreen }) => {\n    return (\n        <form className={fullScreen ? \"search-wrapper fullscreen\" : \"search-wrapper\"} onSubmit={handleSubmit}>\n            <h2 className=\"search-title\">WHAT IS THE WEATHER?</h2>\n            <div>\n                <Paper\n                    className={classes.root}>\n                    <InputBase\n                        className={classes.input}\n                        inputProps={{ \"aria-label\": \"search\" }}\n                        value={searchInput}\n                        onChange={handleChange}\n                        placeholder=\"City\"\n                    />\n                    <IconButton\n                        className={classes.iconButton}\n                        aria-label=\"search\"\n                        type=\"submit\"\n                    >\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n                {showError && <div className=\"search-error\">Please enter city</div>}\n            </div>\n        </form>\n    )\n}\n\nexport default SearchUI\n","import axios from 'axios';\n\nconst API_KEY = '797306ec7cd54de5b48cd37e7c3b5dfb';\n\nexport const API = axios.create({\n  baseURL: \"https://api.weatherbit.io/v2.0/forecast/daily\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  params: {\n    lang: 'ru',\n    key: API_KEY\n  }\n});\n\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useSearchStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down(\"sm\")]: {\n            width: 270\n        },\n        display: \"flex\",\n        alignItems: \"center\",\n        width: 500\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1\n    },\n    iconButton: {\n        padding: 10,\n        \"&:hover\": {\n            borderRadius: 0\n        },\n        borderRadius: 0,\n    }\n}));\n","import { months } from '../constans/constans';\n\nexport const formateDate = (date) => {\n    const arr = date.split('-');\n\n    let num = arr[2][0] === '0' ? arr[2][1] : arr[2]; // убираем первый 0 из чисел до 10\n    let month;\n\n    for (let key in months){\n        if(key === String(arr[1])){\n            month = months[key] \n        }\n    };\n\n    return num + ' ' + month // приводим дату из формата 2021-01-24 в 24 января\n}\n\nexport const formateNum = num => Math.ceil(num) === '-0' ? '0' : Math.ceil(num); // огругление без запятых \n\nexport const formateNumToFixed = num => (num.toFixed(1)).replace('.', ','); // огругление до одного знака после запятой","import React, { useEffect, useState } from \"react\";\nimport SearchUI from \"../ui/SearchUI\";\nimport { API } from \"../../../api/api\";\nimport \"./Search.css\";\nimport { useSearchStyles } from \"../../../styles/useSearchStyles\";\nimport { formateDate, formateNum, formateNumToFixed } from \"../../../functions/functions\";\nimport { PRESSURE_CONST } from \"../../../constans/constans\";\n\nconst SearchContainer = ({ setData, setCity, setIsLoading }) => {\n\n    const classes = useSearchStyles();\n\n    const [searchInput, setSearchInput] = useState('');\n    const [showError, setShowError] = useState(false);\n    const [fullScreen, setFullScreen] = useState(true);\n    const [query, setQuery] = useState('');\n\n    const handleChange = e => {\n        setSearchInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (searchInput === '') {\n            setFullScreen(true);\n            setShowError(true);\n            setSearchInput('');\n        }\n        else {\n            setShowError(false);\n            setQuery(searchInput);\n        }\n    };\n\n    useEffect(() => {\n        let didCancel = false; // abort data fetching \n\n        const fetchData = async () => {\n            setIsLoading(true);\n            try {\n                const result = await API.get('/', {\n                    params: {\n                        city: query\n                    }\n                })\n                if(!didCancel){\n                    if (result.status === 204) {\n                        setShowError(true);\n                        setFullScreen(true);\n                    }\n                    else{\n                        setFullScreen(false);\n                        setCity(result.data.city_name);\n                        setData(result.data.data.map(el => {\n                            return {\n                              ...el,\n                              temp: formateNum(el.temp),\n                              datetime: formateDate(el.datetime),\n                              pres: formateNum(el.pres / PRESSURE_CONST),\n                              wind_spd: formateNumToFixed(el.wind_spd)\n                            }\n                          }));\n                        setSearchInput('');\n                    }\n                }\n                setIsLoading(false);\n            } catch (er) {console.error('error', er);} \n            setIsLoading(false);\n        }\n        query && fetchData(); \n        \n        return () => {\n            didCancel = true; \n        }\n    }, [query]);\n    \n    return <SearchUI\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        searchInput={searchInput}\n        showError={showError}\n        classes={classes} \n        fullScreen = {fullScreen}/>;\n}\n\nexport default SearchContainer;\n","import React, { useState } from \"react\";\nimport CardsContainer from \"./components/Cards/functional/CardsContainer\";\nimport SearchContainer from \"./components/Search/functional/SearchContainer\";\n\nconst App = () => {\n\n  const [data, setData] = useState(undefined);\n  const [city, setCity] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <>\n      <SearchContainer setData={setData} setCity={setCity} setIsLoading={setIsLoading} />\n      {data && <CardsContainer data={data} city={city} isLoading={isLoading}/>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}